{"ast":null,"code":"var _jsxFileName = \"D:\\\\eventmanagement\\\\frontend\\\\src\\\\components\\\\EventDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetails = () => {\n  _s();\n  const {\n    eventId\n  } = useParams();\n  const [event, setEvent] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isRSVPed, setIsRSVPed] = useState(false);\n\n  // Load user ID\n  useEffect(() => {\n    const storedUserId = localStorage.getItem(\"userId\");\n    if (storedUserId && storedUserId !== \"undefined\") {\n      setUserId(storedUserId);\n    }\n  }, []);\n\n  // Load event details\n  useEffect(() => {\n    const fetchEventDetails = async () => {\n      if (!eventId) {\n        setError(\"Invalid event ID.\");\n        return;\n      }\n      try {\n        const response = await axios.get(`http://localhost:5000/events/${eventId}`);\n        setEvent(response.data);\n        // If your API supports RSVP status check, you could call it here too\n        // setIsRSVPed(response.data.isRSVPed); \n      } catch (err) {\n        console.error(\"Error loading event:\", err);\n        setError(\"Failed to load event details.\");\n      }\n    };\n    fetchEventDetails();\n  }, [eventId]);\n\n  // RSVP handler\n  const handleRSVP = async () => {\n    const confirmRSVP = window.confirm(\"Do you want to RSVP for this event?\");\n    if (!confirmRSVP) return;\n    try {\n      const response = await axios.post(\"http://localhost:5000/rsvp\", {\n        eventId,\n        userId\n      });\n      setMessage(response.data.message || \"RSVP successful!\");\n      setIsRSVPed(true);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"RSVP failed:\", err);\n      setMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to RSVP.\");\n    }\n  };\n\n  // Cancel RSVP handler\n  const handleCancelRSVP = async () => {\n    const confirmCancel = window.confirm(\"Are you sure you want to cancel your RSVP?\");\n    if (!confirmCancel) return;\n    try {\n      const response = await axios.post(\"http://localhost:5000/cancel-rsvp\", {\n        eventId,\n        userId\n      });\n      setMessage(response.data.message || \"RSVP cancelled.\");\n      setIsRSVPed(false);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(\"Cancel RSVP failed:\", err);\n      setMessage(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Failed to cancel RSVP.\");\n    }\n  };\n\n  // Render error or loading state\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 21\n  }, this);\n  if (!event) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading event details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: event.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 10\n      }, this), \" \", new Date(event.date).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 10\n      }, this), \" \", event.location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Ticket Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 10\n      }, this), \" \", event.ticket_type]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), \"ticket_availability\" in event && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tickets Available:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 12\n      }, this), \" \", event.ticket_availability]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), userId ? isRSVPed ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCancelRSVP,\n      children: \"Cancel RSVP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRSVP,\n      children: \"RSVP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"orange\"\n      },\n      children: \"Login to RSVP.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\",\n        marginTop: \"10px\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(EventDetails, \"21RMvmbXfwbCV/ut0pItclApay4=\", false, function () {\n  return [useParams];\n});\n_c = EventDetails;\nexport default EventDetails;\nvar _c;\n$RefreshReg$(_c, \"EventDetails\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","EventDetails","_s","eventId","event","setEvent","userId","setUserId","error","setError","message","setMessage","isRSVPed","setIsRSVPed","storedUserId","localStorage","getItem","fetchEventDetails","response","get","data","err","console","handleRSVP","confirmRSVP","window","confirm","post","_err$response","_err$response$data","handleCancelRSVP","confirmCancel","_err$response2","_err$response2$data","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","description","Date","date","toLocaleString","location","ticket_type","ticket_availability","onClick","marginTop","_c","$RefreshReg$"],"sources":["D:/eventmanagement/frontend/src/components/EventDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst EventDetails = () => {\r\n  const { eventId } = useParams();\r\n  const [event, setEvent] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isRSVPed, setIsRSVPed] = useState(false);\r\n\r\n  // Load user ID\r\n  useEffect(() => {\r\n    const storedUserId = localStorage.getItem(\"userId\");\r\n    if (storedUserId && storedUserId !== \"undefined\") {\r\n      setUserId(storedUserId);\r\n    }\r\n  }, []);\r\n\r\n  // Load event details\r\n  useEffect(() => {\r\n    const fetchEventDetails = async () => {\r\n      if (!eventId) {\r\n        setError(\"Invalid event ID.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/events/${eventId}`);\r\n        setEvent(response.data);\r\n        // If your API supports RSVP status check, you could call it here too\r\n        // setIsRSVPed(response.data.isRSVPed); \r\n      } catch (err) {\r\n        console.error(\"Error loading event:\", err);\r\n        setError(\"Failed to load event details.\");\r\n      }\r\n    };\r\n\r\n    fetchEventDetails();\r\n  }, [eventId]);\r\n\r\n  // RSVP handler\r\n  const handleRSVP = async () => {\r\n    const confirmRSVP = window.confirm(\"Do you want to RSVP for this event?\");\r\n    if (!confirmRSVP) return;\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/rsvp\", {\r\n        eventId,\r\n        userId, \r\n      });\r\n      setMessage(response.data.message || \"RSVP successful!\");\r\n      setIsRSVPed(true);\r\n    } catch (err) {\r\n      console.error(\"RSVP failed:\", err);\r\n      setMessage(err.response?.data?.message || \"Failed to RSVP.\");\r\n    }\r\n  };\r\n\r\n  // Cancel RSVP handler\r\n  const handleCancelRSVP = async () => {\r\n    const confirmCancel = window.confirm(\"Are you sure you want to cancel your RSVP?\");\r\n    if (!confirmCancel) return;\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/cancel-rsvp\", {\r\n        eventId,\r\n        userId,\r\n      });\r\n      setMessage(response.data.message || \"RSVP cancelled.\");\r\n      setIsRSVPed(false);\r\n    } catch (err) {\r\n      console.error(\"Cancel RSVP failed:\", err);\r\n      setMessage(err.response?.data?.message || \"Failed to cancel RSVP.\");\r\n    }\r\n  };\r\n\r\n  // Render error or loading state\r\n  if (error) return <div style={{ color: \"red\" }}>{error}</div>;\r\n  if (!event) return <div>Loading event details...</div>;\r\n\r\n  return (\r\n    <div className=\"event-details\">\r\n      <h2>{event.title}</h2>\r\n      <p>{event.description}</p>\r\n      <p><strong>Date:</strong> {new Date(event.date).toLocaleString()}</p>\r\n      <p><strong>Location:</strong> {event.location}</p>\r\n      <p><strong>Ticket Type:</strong> {event.ticket_type}</p>\r\n\r\n      {/* Show ticket availability if available */}\r\n      {\"ticket_availability\" in event && (\r\n        <p><strong>Tickets Available:</strong> {event.ticket_availability}</p>\r\n      )}\r\n\r\n      {/* RSVP buttons */}\r\n      {userId ? (\r\n        isRSVPed ? (\r\n          <button onClick={handleCancelRSVP}>Cancel RSVP</button>\r\n        ) : (\r\n          <button onClick={handleRSVP}>RSVP</button>\r\n        )\r\n      ) : (\r\n        <p style={{ color: \"orange\" }}>Login to RSVP.</p>\r\n      )}\r\n\r\n      {/* Feedback message */}\r\n      {message && <p style={{ color: \"green\", marginTop: \"10px\" }}>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAQ,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMkB,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACnD,IAAIF,YAAY,IAAIA,YAAY,KAAK,WAAW,EAAE;MAChDP,SAAS,CAACO,YAAY,CAAC;IACzB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAlB,SAAS,CAAC,MAAM;IACd,MAAMqB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI,CAACd,OAAO,EAAE;QACZM,QAAQ,CAAC,mBAAmB,CAAC;QAC7B;MACF;MAEA,IAAI;QACF,MAAMS,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,gCAAgChB,OAAO,EAAE,CAAC;QAC3EE,QAAQ,CAACa,QAAQ,CAACE,IAAI,CAAC;QACvB;QACA;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACd,KAAK,CAAC,sBAAsB,EAAEa,GAAG,CAAC;QAC1CZ,QAAQ,CAAC,+BAA+B,CAAC;MAC3C;IACF,CAAC;IAEDQ,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACd,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMoB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,WAAW,GAAGC,MAAM,CAACC,OAAO,CAAC,qCAAqC,CAAC;IACzE,IAAI,CAACF,WAAW,EAAE;IAElB,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMrB,KAAK,CAAC8B,IAAI,CAAC,4BAA4B,EAAE;QAC9DxB,OAAO;QACPG;MACF,CAAC,CAAC;MACFK,UAAU,CAACO,QAAQ,CAACE,IAAI,CAACV,OAAO,IAAI,kBAAkB,CAAC;MACvDG,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOQ,GAAG,EAAE;MAAA,IAAAO,aAAA,EAAAC,kBAAA;MACZP,OAAO,CAACd,KAAK,CAAC,cAAc,EAAEa,GAAG,CAAC;MAClCV,UAAU,CAAC,EAAAiB,aAAA,GAAAP,GAAG,CAACH,QAAQ,cAAAU,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcR,IAAI,cAAAS,kBAAA,uBAAlBA,kBAAA,CAAoBnB,OAAO,KAAI,iBAAiB,CAAC;IAC9D;EACF,CAAC;;EAED;EACA,MAAMoB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,aAAa,GAAGN,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC;IAClF,IAAI,CAACK,aAAa,EAAE;IAEpB,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMrB,KAAK,CAAC8B,IAAI,CAAC,mCAAmC,EAAE;QACrExB,OAAO;QACPG;MACF,CAAC,CAAC;MACFK,UAAU,CAACO,QAAQ,CAACE,IAAI,CAACV,OAAO,IAAI,iBAAiB,CAAC;MACtDG,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC,CAAC,OAAOQ,GAAG,EAAE;MAAA,IAAAW,cAAA,EAAAC,mBAAA;MACZX,OAAO,CAACd,KAAK,CAAC,qBAAqB,EAAEa,GAAG,CAAC;MACzCV,UAAU,CAAC,EAAAqB,cAAA,GAAAX,GAAG,CAACH,QAAQ,cAAAc,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcZ,IAAI,cAAAa,mBAAA,uBAAlBA,mBAAA,CAAoBvB,OAAO,KAAI,wBAAwB,CAAC;IACrE;EACF,CAAC;;EAED;EACA,IAAIF,KAAK,EAAE,oBAAOR,OAAA;IAAKkC,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAC,QAAA,EAAE5B;EAAK;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAC7D,IAAI,CAACpC,KAAK,EAAE,oBAAOJ,OAAA;IAAAoC,QAAA,EAAK;EAAwB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEtD,oBACExC,OAAA;IAAKyC,SAAS,EAAC,eAAe;IAAAL,QAAA,gBAC5BpC,OAAA;MAAAoC,QAAA,EAAKhC,KAAK,CAACsC;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBxC,OAAA;MAAAoC,QAAA,EAAIhC,KAAK,CAACuC;IAAW;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BxC,OAAA;MAAAoC,QAAA,gBAAGpC,OAAA;QAAAoC,QAAA,EAAQ;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAC,IAAII,IAAI,CAACxC,KAAK,CAACyC,IAAI,CAAC,CAACC,cAAc,CAAC,CAAC;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrExC,OAAA;MAAAoC,QAAA,gBAAGpC,OAAA;QAAAoC,QAAA,EAAQ;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACpC,KAAK,CAAC2C,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDxC,OAAA;MAAAoC,QAAA,gBAAGpC,OAAA;QAAAoC,QAAA,EAAQ;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACpC,KAAK,CAAC4C,WAAW;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGvD,qBAAqB,IAAIpC,KAAK,iBAC7BJ,OAAA;MAAAoC,QAAA,gBAAGpC,OAAA;QAAAoC,QAAA,EAAQ;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACpC,KAAK,CAAC6C,mBAAmB;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CACtE,EAGAlC,MAAM,GACLM,QAAQ,gBACNZ,OAAA;MAAQkD,OAAO,EAAEpB,gBAAiB;MAAAM,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAEvDxC,OAAA;MAAQkD,OAAO,EAAE3B,UAAW;MAAAa,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAC1C,gBAEDxC,OAAA;MAAGkC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAS,CAAE;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjD,EAGA9B,OAAO,iBAAIV,OAAA;MAAGkC,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEgB,SAAS,EAAE;MAAO,CAAE;MAAAf,QAAA,EAAE1B;IAAO;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV,CAAC;AAACtC,EAAA,CA1GID,YAAY;EAAA,QACIH,SAAS;AAAA;AAAAsD,EAAA,GADzBnD,YAAY;AA4GlB,eAAeA,YAAY;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}