{"ast":null,"code":"var _jsxFileName = \"D:\\\\eventmanagement\\\\frontend\\\\src\\\\components\\\\organizer-dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\"; // Import Routes and Route\nimport CreateEventForm from \"./CreateEventForm\"; // Import components\nimport EventListing from \"./EventListing\";\nimport EventDetails from \"./EventDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrganizerDashboard = () => {\n  _s();\n  const [selectedTab, setSelectedTab] = useState(\"createEvent\"); // Default tab is \"Create Event\"\n  const navigate = useNavigate(); // Using navigate to handle route programmatically\n\n  // Navigation function to update selected tab and navigate to the correct route\n  const handleTabChange = tab => {\n    setSelectedTab(tab);\n    if (tab === \"eventDetails\") {\n      // Navigate to the event details page programmatically if needed (e.g., when selecting an event from a listing)\n      navigate(\"/organizer-dashboard/event/:eventId\"); // Modify with actual eventId\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"organizer-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Organizer Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTabChange(\"createEvent\"),\n        children: \"Create Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTabChange(\"eventListing\"),\n        children: \"Event Listing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), selectedTab === \"createEvent\" && /*#__PURE__*/_jsxDEV(CreateEventForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 41\n    }, this), selectedTab === \"eventListing\" && /*#__PURE__*/_jsxDEV(EventListing, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 42\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"event/:eventId\",\n        element: /*#__PURE__*/_jsxDEV(EventDetails, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(OrganizerDashboard, \"/joEgY4kHCSm6UAMai9B5gXtxzg=\", false, function () {\n  return [useNavigate];\n});\n_c = OrganizerDashboard;\nexport default OrganizerDashboard;\nvar _c;\n$RefreshReg$(_c, \"OrganizerDashboard\");","map":{"version":3,"names":["React","useState","Routes","Route","useNavigate","CreateEventForm","EventListing","EventDetails","jsxDEV","_jsxDEV","OrganizerDashboard","_s","selectedTab","setSelectedTab","navigate","handleTabChange","tab","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","path","element","_c","$RefreshReg$"],"sources":["D:/eventmanagement/frontend/src/components/organizer-dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\"; // Import Routes and Route\r\nimport CreateEventForm from \"./CreateEventForm\"; // Import components\r\nimport EventListing from \"./EventListing\";\r\nimport EventDetails from \"./EventDetails\";\r\n\r\nconst OrganizerDashboard = () => {\r\n  const [selectedTab, setSelectedTab] = useState(\"createEvent\"); // Default tab is \"Create Event\"\r\n  const navigate = useNavigate(); // Using navigate to handle route programmatically\r\n  \r\n  // Navigation function to update selected tab and navigate to the correct route\r\n  const handleTabChange = (tab) => {\r\n    setSelectedTab(tab);\r\n    if (tab === \"eventDetails\") {\r\n      // Navigate to the event details page programmatically if needed (e.g., when selecting an event from a listing)\r\n      navigate(\"/organizer-dashboard/event/:eventId\"); // Modify with actual eventId\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"organizer-dashboard\">\r\n      <h2>Organizer Dashboard</h2>\r\n\r\n      {/* Navigation buttons */}\r\n      <div className=\"button-group\">\r\n        <button onClick={() => handleTabChange(\"createEvent\")}>Create Event</button>\r\n        <button onClick={() => handleTabChange(\"eventListing\")}>Event Listing</button>\r\n      </div>\r\n\r\n      {/* Conditional rendering based on selected tab */}\r\n      {selectedTab === \"createEvent\" && <CreateEventForm />}\r\n      {selectedTab === \"eventListing\" && <EventListing />}\r\n      {/* Nested Routes for specific event details */}\r\n      <Routes>\r\n        <Route path=\"event/:eventId\" element={<EventDetails />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrganizerDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAC/D,OAAOC,eAAe,MAAM,mBAAmB,CAAC,CAAC;AACjD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;EAC/D,MAAMa,QAAQ,GAAGV,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA,MAAMW,eAAe,GAAIC,GAAG,IAAK;IAC/BH,cAAc,CAACG,GAAG,CAAC;IACnB,IAAIA,GAAG,KAAK,cAAc,EAAE;MAC1B;MACAF,QAAQ,CAAC,qCAAqC,CAAC,CAAC,CAAC;IACnD;EACF,CAAC;EAED,oBACEL,OAAA;IAAKQ,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCT,OAAA;MAAAS,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG5Bb,OAAA;MAAKQ,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BT,OAAA;QAAQc,OAAO,EAAEA,CAAA,KAAMR,eAAe,CAAC,aAAa,CAAE;QAAAG,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5Eb,OAAA;QAAQc,OAAO,EAAEA,CAAA,KAAMR,eAAe,CAAC,cAAc,CAAE;QAAAG,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC,EAGLV,WAAW,KAAK,aAAa,iBAAIH,OAAA,CAACJ,eAAe;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACpDV,WAAW,KAAK,cAAc,iBAAIH,OAAA,CAACH,YAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEnDb,OAAA,CAACP,MAAM;MAAAgB,QAAA,eACLT,OAAA,CAACN,KAAK;QAACqB,IAAI,EAAC,gBAAgB;QAACC,OAAO,eAAEhB,OAAA,CAACF,YAAY;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACX,EAAA,CAhCID,kBAAkB;EAAA,QAELN,WAAW;AAAA;AAAAsB,EAAA,GAFxBhB,kBAAkB;AAkCxB,eAAeA,kBAAkB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}