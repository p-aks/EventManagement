{"ast":null,"code":"var _jsxFileName = \"D:\\\\eventmanagement\\\\frontend\\\\src\\\\components\\\\EventDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetails = () => {\n  _s();\n  const {\n    eventId\n  } = useParams(); // Get the event ID from the URL\n  const [event, setEvent] = useState(null);\n  const [tickets, setTickets] = useState(null); // To store ticket availability\n  const [error, setError] = useState(\"\");\n  const [userId, setUserId] = useState(null); // Track the logged-in user ID\n  const [isRSVPed, setIsRSVPed] = useState(false); // Track RSVP status\n  const [message, setMessage] = useState(\"\");\n\n  // Fetch event details and ticket information based on eventId\n  useEffect(() => {\n    const fetchEventDetails = async () => {\n      try {\n        // Fetch event data based on eventId\n        const eventResponse = await axios.get(`http://localhost:5000/events/${eventId}`);\n        setEvent(eventResponse.data);\n\n        // Fetch ticket availability from the ticket table based on eventId\n        const ticketResponse = await axios.get(`http://localhost:5000/tickets/${eventId}`);\n        setTickets(ticketResponse.data);\n      } catch (error) {\n        console.error(\"Error fetching event details:\", error);\n        setError(\"Failed to fetch event details.\");\n      }\n    };\n    fetchEventDetails();\n  }, [eventId]);\n\n  // Fetch user ID from localStorage\n  useEffect(() => {\n    const storedUserId = localStorage.getItem(\"userId\");\n    if (storedUserId) {\n      setUserId(storedUserId);\n    }\n  }, []);\n\n  // RSVP handler\n  const handleRSVP = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/rsvp\", {\n        eventId,\n        userId\n      });\n      setMessage(response.data.message || \"RSVP successful!\");\n      setIsRSVPed(true);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to RSVP.\");\n    }\n  };\n\n  // Cancel RSVP handler\n  const handleCancelRSVP = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/cancel-rsvp\", {\n        eventId,\n        userId\n      });\n      setMessage(response.data.message || \"RSVP cancelled.\");\n      setIsRSVPed(false);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setMessage(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Failed to cancel RSVP.\");\n    }\n  };\n\n  // Render error or loading state\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 21\n  }, this);\n  if (!event || tickets === null) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading event details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 42\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-details\",\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: event.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tickets Available:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 10\n      }, this), \" \", tickets.quantity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), userId ? isRSVPed ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCancelRSVP,\n      style: {\n        backgroundColor: \"red\",\n        color: \"white\"\n      },\n      children: \"Cancel RSVP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRSVP,\n      style: {\n        backgroundColor: \"green\",\n        color: \"white\"\n      },\n      children: \"RSVP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"orange\"\n      },\n      children: \"Login to RSVP.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\",\n        marginTop: \"10px\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(EventDetails, \"ujwpb7UXXx/cMHpgih9OPfXIy3I=\", false, function () {\n  return [useParams];\n});\n_c = EventDetails;\nexport default EventDetails;\nvar _c;\n$RefreshReg$(_c, \"EventDetails\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","jsxDEV","_jsxDEV","EventDetails","_s","eventId","event","setEvent","tickets","setTickets","error","setError","userId","setUserId","isRSVPed","setIsRSVPed","message","setMessage","fetchEventDetails","eventResponse","get","data","ticketResponse","console","storedUserId","localStorage","getItem","handleRSVP","response","post","err","_err$response","_err$response$data","handleCancelRSVP","_err$response2","_err$response2$data","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","className","padding","title","description","quantity","onClick","backgroundColor","marginTop","_c","$RefreshReg$"],"sources":["D:/eventmanagement/frontend/src/components/EventDetails.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst EventDetails = () => {\r\n  const { eventId } = useParams(); // Get the event ID from the URL\r\n  const [event, setEvent] = useState(null);\r\n  const [tickets, setTickets] = useState(null); // To store ticket availability\r\n  const [error, setError] = useState(\"\");\r\n  const [userId, setUserId] = useState(null); // Track the logged-in user ID\r\n  const [isRSVPed, setIsRSVPed] = useState(false); // Track RSVP status\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // Fetch event details and ticket information based on eventId\r\n  useEffect(() => {\r\n    const fetchEventDetails = async () => {\r\n      try {\r\n        // Fetch event data based on eventId\r\n        const eventResponse = await axios.get(`http://localhost:5000/events/${eventId}`);\r\n        setEvent(eventResponse.data);\r\n\r\n        // Fetch ticket availability from the ticket table based on eventId\r\n        const ticketResponse = await axios.get(`http://localhost:5000/tickets/${eventId}`);\r\n        setTickets(ticketResponse.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching event details:\", error);\r\n        setError(\"Failed to fetch event details.\");\r\n      }\r\n    };\r\n\r\n    fetchEventDetails();\r\n  }, [eventId]);\r\n\r\n  // Fetch user ID from localStorage\r\n  useEffect(() => {\r\n    const storedUserId = localStorage.getItem(\"userId\");\r\n    if (storedUserId) {\r\n      setUserId(storedUserId);\r\n    }\r\n  }, []);\r\n\r\n  // RSVP handler\r\n  const handleRSVP = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/rsvp\", {\r\n        eventId,\r\n        userId,\r\n      });\r\n      setMessage(response.data.message || \"RSVP successful!\");\r\n      setIsRSVPed(true);\r\n    } catch (err) {\r\n      setMessage(err.response?.data?.message || \"Failed to RSVP.\");\r\n    }\r\n  };\r\n\r\n  // Cancel RSVP handler\r\n  const handleCancelRSVP = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/cancel-rsvp\", {\r\n        eventId,\r\n        userId,\r\n      });\r\n      setMessage(response.data.message || \"RSVP cancelled.\");\r\n      setIsRSVPed(false);\r\n    } catch (err) {\r\n      setMessage(err.response?.data?.message || \"Failed to cancel RSVP.\");\r\n    }\r\n  };\r\n\r\n  // Render error or loading state\r\n  if (error) return <div style={{ color: \"red\" }}>{error}</div>;\r\n  if (!event || tickets === null) return <div>Loading event details...</div>;\r\n\r\n  return (\r\n    <div className=\"event-details\" style={{ padding: \"20px\" }}>\r\n      <h2>{event.title}</h2>\r\n      <p>{event.description}</p>\r\n      \r\n      {/* Ticket Availability */}\r\n      <p><strong>Tickets Available:</strong> {tickets.quantity}</p>\r\n\r\n      {/* RSVP buttons */}\r\n      {userId ? (\r\n        isRSVPed ? (\r\n          <button onClick={handleCancelRSVP} style={{ backgroundColor: \"red\", color: \"white\" }}>\r\n            Cancel RSVP\r\n          </button>\r\n        ) : (\r\n          <button onClick={handleRSVP} style={{ backgroundColor: \"green\", color: \"white\" }}>\r\n            RSVP\r\n          </button>\r\n        )\r\n      ) : (\r\n        <p style={{ color: \"orange\" }}>Login to RSVP.</p>\r\n      )}\r\n\r\n      {/* Display feedback message */}\r\n      {message && <p style={{ color: \"green\", marginTop: \"10px\" }}>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}